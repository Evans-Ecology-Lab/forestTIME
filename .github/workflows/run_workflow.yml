on:
  push:
    branches: [main, master]
    #don't re-run if changes are just "cosmetic"
    paths-ignore:
      - 'README*'
      - 'LICENSE*'
      - 'docs/**'
      - 'man/**'
      - 'CITATION.cff'
      - 'NEWS.md'
  pull_request:  
    #don't re-run if changes are just "cosmetic"
    paths-ignore:
      - 'README*'
      - 'LICENSE*'
      - 'docs/**'
      - 'man/**'
      - 'CITATION.cff'
      - 'NEWS.md'
  workflow_dispatch:
  #   # TODO eventually add schedule?
  # schedule:
  #   - cron: 

name: run_workflow.yml

jobs:
  define-matrix:
    runs-on: ubuntu-latest
    outputs:
      states: ${{ steps.set-matrix.outputs.states }}
    steps:
      - name: Define states
        id: set-matrix
        run: |
          isPR=$(echo '${{ github.event_name == 'pull_request'}}')
          if [ "$isPR" = true ]
          then
            echo 'states=["RI", "DE"]' >> "$GITHUB_OUTPUT"
          else
            echo 'states=["AL", "AK", "AZ", "AR", "CA", "CO", "CT", "DE", "FL", "GA", "ID", "IL", "IN", "IA", "KS", "KY", "LA", "ME", "MD", "MA", "MI", "MN", "MS", "MO", "MT", "NE", "NV", "NH", "NJ", "NM", "NY", "NC", "ND", "OH", "OK", "OR", "PA", "RI", "SC", "SD", "TN", "TX", "UT", "VT", "VA", "WA", "WV", "WI", "WY"]' >> "$GITHUB_OUTPUT"
          fi
  states:
    runs-on: ubuntu-latest
    needs: define-matrix
    strategy:
      matrix:
        state: ${{ fromJSON(needs.define-matrix.outputs.states) }}
    steps:
      - uses: actions/checkout@v4

      - uses: r-lib/actions/setup-pandoc@v2

      - uses: r-lib/actions/setup-r@v2
        with:
          r-version: 'release'
          use-public-rspm: true

      - uses: r-lib/actions/setup-r-dependencies@v2
        with:
          extra-packages: local::. 
      
      - name: Generate state parquet
        run: Rscript -e 'source("scripts/state-parquet.R")'
        env:
          STATE: ${{ matrix.state }}
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.state }}
          path: fia/parquet/*
  
  combine:
    runs-on: ubuntu-latest
    needs: states
    # env:
    #   ZENODO_TOKEN: ${{ secrets.ZENODO_TOKEN }}
    steps:
      - uses: actions/checkout@v4
      # - uses: r-lib/actions/setup-r@v2
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: fia/parquet
          merge-multiple: true
      - name: Create zip file
        run: zip -r all_states.zip fia/parquet
      # - name: Push to Zenodo
      #   if: ${{ github.event_name != "pull_request" }}
      #   run: Rscript -e 'source("scripts/03-upload_parquet_db_zenodo.R")'
      # - name: Check db
      #   run: Rscript -e 'source("scripts/04-check_db.R")'
      # - name: Check saplings
      #   run: Rscript -e 'source("scripts/05-check_saplings.R")'
      # - name: Check annualized
      #   run: Rscript -e 'source("scripts/06-check-annualized.R")'
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: all_states.zip
          path: all_states.zip
